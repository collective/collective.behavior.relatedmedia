{"version":3,"file":"chunks/6176.7f5d0f9697f0e30f483e.min.js","mappings":"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","sources":["webpack://relatedmedia/./node_modules/@plone/registry/dist/index.js"],"sourcesContent":["// src/index.ts\nvar Config = class _Config {\n  _data;\n  static instance;\n  constructor() {\n    if (!_Config.instance) {\n      this._data = {\n        settings: {},\n        blocks: {},\n        views: {},\n        widgets: {},\n        slots: {},\n        components: {},\n        utilities: {}\n      };\n      _Config.instance = this;\n    }\n    return _Config.instance;\n  }\n  set(registry, item) {\n    this._data[registry] = item;\n  }\n  get(registry) {\n    return this._data[registry];\n  }\n  get settings() {\n    return this._data.settings;\n  }\n  set settings(settings) {\n    this._data.settings = settings;\n  }\n  get experimental() {\n    return this._data.experimental;\n  }\n  set experimental(experimental) {\n    this._data.experimental = experimental;\n  }\n  get blocks() {\n    return this._data.blocks;\n  }\n  set blocks(blocks) {\n    this._data.blocks = blocks;\n  }\n  get views() {\n    return this._data.views;\n  }\n  set views(views) {\n    this._data.views = views;\n  }\n  get widgets() {\n    return this._data.widgets;\n  }\n  set widgets(widgets) {\n    this._data.widgets = widgets;\n  }\n  get addonReducers() {\n    return this._data.addonReducers;\n  }\n  set addonReducers(addonReducers) {\n    this._data.addonReducers = addonReducers;\n  }\n  get addonRoutes() {\n    return this._data.addonRoutes;\n  }\n  set addonRoutes(addonRoutes) {\n    this._data.addonRoutes = addonRoutes;\n  }\n  get routes() {\n    return this._data.routes;\n  }\n  set routes(routes) {\n    this._data.routes = routes;\n  }\n  get slots() {\n    return this._data.slots;\n  }\n  set slots(slots) {\n    this._data.slots = slots;\n  }\n  get components() {\n    return this._data.components;\n  }\n  set components(components) {\n    this._data.components = components;\n  }\n  get utilities() {\n    return this._data.utilities;\n  }\n  set utilities(utilities) {\n    this._data.utilities = utilities;\n  }\n  getComponent(options) {\n    if (typeof options === \"object\") {\n      const { name, dependencies = \"\" } = options;\n      let depsString = \"\";\n      if (dependencies && Array.isArray(dependencies)) {\n        depsString = dependencies.join(\"+\");\n      } else if (typeof dependencies === \"string\") {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : \"\"}`;\n      return this._data.components[componentName] || {};\n    } else {\n      const componentName = options;\n      return this._data.components[componentName] || {};\n    }\n  }\n  registerComponent(options) {\n    const { name, component, dependencies = \"\" } = options;\n    let depsString = \"\";\n    if (!component) {\n      throw new Error(\"No component provided\");\n    } else {\n      if (dependencies && Array.isArray(dependencies)) {\n        depsString = dependencies.join(\"+\");\n      } else if (typeof dependencies === \"string\") {\n        depsString = dependencies;\n      }\n      const componentName = `${name}${depsString ? `|${depsString}` : \"\"}`;\n      this._data.components[componentName] = { component };\n      try {\n        const displayName = this._data.components[componentName].component.displayName;\n        if (!displayName && typeof this._data.components[componentName].component === \"function\") {\n          this._data.components[componentName].component.displayName = name;\n        }\n      } catch (error) {\n        console.warn(`Not setting the component displayName because ${error}`);\n      }\n    }\n  }\n  getSlot(name, args) {\n    if (!this._data.slots[name]) {\n      return;\n    }\n    const { slots, data } = this._data.slots[name];\n    const slotComponents = [];\n    for (const slotName of slots) {\n      let noPredicateComponent;\n      const reversedSlotComponents = data[slotName].slice().reverse();\n      for (const slotComponent of reversedSlotComponents) {\n        let isPredicateTrueFound = false;\n        if (slotComponent.predicates) {\n          isPredicateTrueFound = slotComponent.predicates.every(\n            (predicate) => predicate(args)\n          );\n        } else {\n          noPredicateComponent = slotComponent;\n        }\n        if (isPredicateTrueFound) {\n          slotComponents.push({\n            component: slotComponent.component,\n            name: slotName\n          });\n          noPredicateComponent = void 0;\n          break;\n        }\n      }\n      if (noPredicateComponent) {\n        slotComponents.push({\n          component: noPredicateComponent.component,\n          name: slotName\n        });\n      }\n    }\n    return slotComponents;\n  }\n  registerSlotComponent(options) {\n    const { name, component, predicates, slot } = options;\n    if (!component) {\n      throw new Error(\"No component provided\");\n    }\n    if (!predicates) {\n      const hasRegisteredNoPredicatesComponent = this._data.slots?.[slot]?.data?.[name]?.find(({ predicates: predicates2 }) => !predicates2);\n      if (hasRegisteredNoPredicatesComponent && component !== hasRegisteredNoPredicatesComponent.component) {\n        throw new Error(\n          `There is already registered a component ${name} for the slot ${slot}. You can only register one slot component with no predicates per slot.`\n        );\n      }\n    }\n    let currentSlot = this._data.slots[slot];\n    if (!currentSlot) {\n      this._data.slots[slot] = {\n        slots: [],\n        data: {}\n      };\n      currentSlot = this._data.slots[slot];\n    }\n    if (!currentSlot.data[name]) {\n      currentSlot.data[name] = [];\n    }\n    const currentSlotComponents = currentSlot.data[name];\n    if (!currentSlot.slots.includes(name)) {\n      currentSlot.slots.push(name);\n    }\n    const slotComponentData = {\n      component,\n      predicates\n    };\n    try {\n      const displayName = slotComponentData.component.displayName;\n      if (!displayName && typeof slotComponentData?.component === \"function\") {\n        slotComponentData.component.displayName = name;\n      }\n    } catch (error) {\n      console.warn(\n        `Not setting the slot component displayName because ${error}`\n      );\n    }\n    currentSlotComponents.push(slotComponentData);\n  }\n  getSlotComponent(slot, name) {\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    const currentSlotComponents = currentSlot.data[name];\n    if (!currentSlotComponents) {\n      throw new Error(`No slot component ${name} in slot ${slot} found`);\n    }\n    return currentSlotComponents;\n  }\n  getSlotComponents(slot) {\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    return currentSlot.slots;\n  }\n  reorderSlotComponent({\n    slot,\n    name,\n    position,\n    action,\n    target\n  }) {\n    if (!position && !action) {\n      throw new Error(`At least a position or action is required as argument`);\n    }\n    if (position && action) {\n      throw new Error(\n        `You should provide only one of position or action as arguments`\n      );\n    }\n    if ((action == \"after\" || action == \"before\") && !target) {\n      throw new Error(\n        `No action target set. You should provide the name of a slot component as target when action is 'after' or 'before'.`\n      );\n    }\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    const origin = currentSlot.slots.indexOf(name);\n    const result = Array.from(currentSlot.slots);\n    const [removed] = result.splice(origin, 1);\n    if (action) {\n      let targetIdx = 0;\n      if (target) {\n        targetIdx = currentSlot.slots.indexOf(target);\n      }\n      switch (action) {\n        case \"after\":\n          if (targetIdx < origin) {\n            result.splice(targetIdx + 1, 0, removed);\n            break;\n          } else {\n            result.splice(targetIdx, 0, removed);\n            break;\n          }\n        case \"before\":\n          if (targetIdx > origin) {\n            result.splice(targetIdx - 1, 0, removed);\n            break;\n          } else {\n            result.splice(targetIdx, 0, removed);\n            break;\n          }\n        case \"last\":\n          result.push(removed);\n          break;\n        case \"first\":\n          result.unshift(removed);\n          break;\n        default:\n          break;\n      }\n    }\n    if (position) {\n      result.splice(position, 0, removed);\n    }\n    currentSlot.slots = result;\n  }\n  unRegisterSlotComponent(slot, name, position) {\n    const currentSlot = this._data.slots[slot];\n    if (!slot || !currentSlot) {\n      throw new Error(`No slot ${slot} found`);\n    }\n    const currentSlotComponents = currentSlot.data[name];\n    if (!currentSlotComponents) {\n      throw new Error(`No slot component ${name} in slot ${slot} found`);\n    }\n    const result = currentSlotComponents.slice();\n    currentSlot.data[name] = result.splice(position, 1);\n  }\n  registerUtility(options) {\n    const { name, type, method, dependencies = {} } = options;\n    let depsString = \"\";\n    if (!method) {\n      throw new Error(\"No method provided\");\n    } else {\n      depsString = Object.keys(dependencies).sort().map((key) => `${key}:${dependencies[key]}`).join(\"+\");\n    }\n    const utilityName = `${depsString ? `|${depsString}` : \"\"}${name}`;\n    let utilityType = this._data.utilities[type];\n    if (!utilityType) {\n      this._data.utilities[type] = {};\n      utilityType = this._data.utilities[type];\n    }\n    utilityType[utilityName] = { method };\n  }\n  getUtility(options) {\n    const { name, type, dependencies = {} } = options;\n    let depsString = \"\";\n    depsString = Object.keys(dependencies).map((key) => `${key}:${dependencies[key]}`).join(\"+\");\n    const utilityName = `${depsString ? `|${depsString}` : \"\"}${name}`;\n    return this._data.utilities[type][utilityName] || {};\n  }\n  getUtilities(options) {\n    const { type, dependencies = {} } = options;\n    let depsString = \"\";\n    depsString = Object.keys(dependencies).map((key) => `${key}:${dependencies[key]}`).join(\"+\");\n    const utilityName = `${depsString ? `|${depsString}` : \"\"}`;\n    const utilitiesKeys = Object.keys(this._data.utilities[type] || {}).filter(\n      (key) => key.startsWith(utilityName)\n    );\n    const utilities = utilitiesKeys.map(\n      (key) => this._data.utilities[type][key]\n    );\n    return utilities;\n  }\n  registerRoute(options) {\n    const route = this._data.routes || [];\n    route.push(options);\n    this._data.routes = route;\n  }\n};\nvar instance = new Config();\nObject.freeze(instance);\nvar src_default = instance;\nexport {\n  src_default as default\n};\n"],"names":["instance","_Config2","_Config","_classCallCheck","_defineProperty","this","_data","settings","blocks","views","widgets","slots","components","utilities","key","value","registry","item","get","set","experimental","addonReducers","addonRoutes","routes","options","_typeof","name","_options$dependencies","dependencies","depsString","Array","isArray","join","componentName","concat","component","_options$dependencies2","Error","displayName","error","console","warn","args","_step","_this$_data$slots$nam","data","slotComponents","_iterator","_createForOfIteratorHelper","s","n","done","_step2","slotName","noPredicateComponent","_iterator2","slice","reverse","slotComponent","isPredicateTrueFound","predicates","every","predicate","push","err","e","f","slot","_this$_data$slots","hasRegisteredNoPredicatesComponent","find","_ref","currentSlot","currentSlotComponents","includes","slotComponentData","_ref2","position","action","target","origin","indexOf","result","from","removed","_slicedToArray","splice","targetIdx","unshift","type","method","_options$dependencies3","Object","keys","sort","map","utilityName","utilityType","_options$dependencies4","_this","_options$dependencies5","filter","startsWith","route","freeze","src_default"],"sourceRoot":""}