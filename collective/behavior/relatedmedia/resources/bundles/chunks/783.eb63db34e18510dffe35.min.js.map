{"version":3,"file":"chunks/783.eb63db34e18510dffe35.min.js","mappings":"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","sources":["webpack://relatedmedia/./node_modules/@patternslib/patternslib/src/core/basepattern.js","webpack://relatedmedia/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://relatedmedia/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://relatedmedia/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://relatedmedia/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://relatedmedia/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://relatedmedia/./node_modules/@patternslib/patternslib/src/core/utils.js"],"sourcesContent":["/**\n * A Base pattern for creating scoped patterns.\n *\n * Each instance of a pattern has its own local scope.\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * For usage, see basepattern.md\n */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst log = logging.getLogger(\"basepattern\");\n\nclass BasePattern {\n    static name; // name of pattern used in Registry.\n    static trigger; // A CSS selector to match elements that should trigger the pattern instantiation.\n    static parser; // Options parser.\n\n    // Parser options\n    parser_group_options = true;\n    parser_multiple = undefined;\n    parser_inherit = true;\n\n    constructor(el, options = {}) {\n        // Make static variables available on instance.\n        this.name = this.constructor.name;\n        this.trigger = this.constructor.trigger;\n        this.parser = this.constructor.parser;\n\n        if (!el) {\n            log.warn(`No element given to pattern ${this.name}.`);\n            return;\n        }\n        if (el.jquery) {\n            el = el[0];\n        }\n        this.el = el;\n\n        // Notify pre-init\n        this.el.dispatchEvent(\n            new Event(`pre-init.${this.name}.patterns`, {\n                bubbles: true,\n                cancelable: true,\n            })\n        );\n\n        // Initialize asynchronously.\n        //\n        // 1) We need to call the concrete implementation of ``init``, but the\n        //    inheritance chain is not yet set up and ``init`` not available.\n        //\n        // 2) We want to wait for the init() to successfuly finish and fire an\n        //    event then.\n        //    But the constructer cannot not return a Promise, thus not be\n        //    asynchronous but only return itself.\n        //\n        // Both limitations are gone in next tick.\n        //\n        window.setTimeout(async () => {\n            if (typeof this.el[`pattern-${this.name}`] !== \"undefined\") {\n                // Do not reinstantiate\n                log.debug(`Not reinstatiating the pattern ${this.name}.`, this.el);\n\n                // Notify that not instantiated\n                this.el.dispatchEvent(\n                    new Event(`not-init.${this.name}.patterns`, {\n                        bubbles: true,\n                        cancelable: false,\n                    })\n                );\n                return;\n            }\n\n            // Create the options object by parsing the element and using the\n            // optional options as default.\n            this.options =\n                this.parser?.parse(\n                    this.el,\n                    options,\n                    this.parser_multiple,\n                    this.parser_inherit,\n                    this.parser_group_options\n                ) ?? options;\n\n            // Store pattern instance on element\n            this.el[`pattern-${this.name}`] = this;\n\n            // Initialize the pattern\n            await this.init();\n\n            // Notify that now ready\n            this.el.dispatchEvent(\n                new Event(`init.${this.name}.patterns`, {\n                    bubbles: true,\n                    cancelable: true,\n                })\n            );\n        }, 0);\n    }\n\n    async init() {\n        // Extend this method in your pattern.\n    }\n\n    /**\n     * Listen to an event on the element only once.\n     *\n     * @param {string} event_name - Name of the event to listen to.\n     * @param {function} callback - Callback to call when the event is thrown.\n     */\n    one(event_name, event_callback) {\n        events.add_event_listener(\n            this.el,\n            `${event_name}.${this.name}.patterns`,\n            `basepattern-one--${event_name}.${this.name}.patterns`,\n            event_callback,\n            {\n                once: true,\n            }\n        );\n    }\n\n    /**\n     * Destroy/remove/unload the pattern from the element.\n     */\n    destroy() {\n        delete this.el[`pattern-${this.name}`];\n    }\n}\n\nexport default BasePattern;\nexport { BasePattern };\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        let uuid;\n        if (window.crypto.randomUUID) {\n            // Create a real UUID\n            // window.crypto.randomUUID does only exist in browsers with secure\n            // context.\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n            uuid = window.crypto.randomUUID();\n        } else {\n            // Create a sufficiently unique ID\n            const array = new Uint32Array(4);\n            uuid = window.crypto.getRandomValues(array).join(\"\");\n        }\n        set_data(el, \"uuid\", uuid);\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(\"input, select, textarea, button\")?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","import utils from \"./utils\";\n\n// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = new Map();\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map.has(el)) {\n        event_listener_map.set(el, new Map());\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            event_listener_map.get(el)?.delete(id);\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map\n        .get(el)\n        .set(id, [event_type, _cb, opts.capture ? opts : undefined]);\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * If an element and id are given, the event listeners for the given element matching the id are removed.\n * If an element but no id is given, all event listeners for that element are removed.\n * If an id but no element is given, all event listeners for any element matching the id are removed.\n * If no element and no id are given, all event listeners are removed.\n *\n * The id can be a wildcard string, e.g. `test-*-event`, which would match any\n * event which starts with \"test-\" and ends with \"-event\". The wildcard \"*\" can\n * be anywhere in the string and also be used multiple times. If no wildcard is\n * present the search string is used for an exact match.\n *\n * @param {DOM Node} [el] - The element to register the event for.\n * @param {string} [id] - A unique id under which the event is registered.\n *                        Can be a wildcard string.\n *\n */\nconst remove_event_listener = (el, id) => {\n    const els = el ? [el] : event_listener_map.keys();\n    for (const el of els) {\n        if (!el?.removeEventListener) {\n            return; // nothing to do.\n        }\n        const el_events = event_listener_map.get(el);\n        if (!el_events) {\n            return;\n        }\n        let entries;\n        if (id) {\n            // remove event listener with matching id\n            entries = [...el_events.entries()].filter((entry) =>\n                utils.regexp_from_wildcard(id).test(entry[0])\n            );\n        } else {\n            // remove all event listeners of element\n            entries = el_events.entries();\n        }\n        for (const entry of entries || []) {\n            // Remove event listener\n            el.removeEventListener(entry[1][0], entry[1][1], entry[1][2]);\n            // Delete entry from event_listener_map\n            event_listener_map.get(el).delete(entry[0]);\n            // Delete element from event_listener_map if no more events are registered.\n            if (!event_listener_map.get(el).size) {\n                event_listener_map.delete(el);\n            }\n        }\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\n/** Generic event factory.\n *\n * A event factory for a bubbling and cancelable generic event.\n *\n * @param {string} name - The event name.\n * @returns {Event} - Returns a blur event.\n */\nconst generic_event = (name) => {\n    return new Event(name, {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = ({ submitter } = { submitter: undefined }) => {\n    const event = new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n    event.submitter = submitter; // undefined or the submitting element\n    return event;\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    generic_event: generic_event,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw `Attempted to add an alias \"${alias}\" for a non-existing parser argument \"${original}\".`;\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw `Cannot convert value for ${name} to boolean.`;\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw `Cannot convert value for ${name} to number.`;\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw `Cannot convert value for ${name} to number.`;\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw `Do not know how to convert value for ${name} of type ${typeof value} to ${\n                            spec.type\n                        }.`;\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(`Illegal value for ${name}: ${value}.`);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(`Ignoring value for unknown argument: ${name}.`);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(`Invalid parameter: ${part}: ${argstring}.`);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(`Unknown named parameter: ${matches[1]}.`);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(`Ignore extra arguments: ${parts.join(\" \")}.`);\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(`Invalid JSON argument found: ${parameter}.`);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters) {\n            if (typeof this.parameters[name].value === \"function\") {\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(`Default function for ${name} failed.`);\n                }\n            } else {\n                result[name] = this.parameters[name].value;\n            }\n        }\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) {\n                continue;\n            }\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            ) {\n                options[name] = options[spec.value.slice(1)];\n            }\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) {\n                    continue;\n                }\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\") {\n                        options[spec.group] = {};\n                    }\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el.parents(`[${this.attribute}]`).addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_defineProperties","target","props","descriptor","_toPropertyKey","_defineProperty","obj","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","log","logging","getLogger","BasePattern","el","_this","options","instance","Constructor","_classCallCheck","this","trigger","parser","jquery","dispatchEvent","Event","concat","bubbles","cancelable","window","setTimeout","_callee","_this$parser$parse","_this$parser","_context","debug","parse","parser_multiple","parser_inherit","parser_group_options","init","warn","protoProps","staticProps","_init","_callee2","_context2","event_name","event_callback","events","add_event_listener","once","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","parseFloat","parseInt","Math","round","get_relative_position","reference_el","document","body","left","abs","getBoundingClientRect","scrollLeft","dom","top","scrollTop","get_data","default_value","set_data","toNodeArray","nodes","NodeList","_toConsumableArray","Array","querySelectorAllAndMe","selector","all","querySelectorAll","matches","unshift","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","parent","_parent$parentNode","_parent$parentNode$cl","_parent$parentNode2","closest","find_scoped","indexOf","get_parents","parents","_parent","HTMLElement","acquire_attribute","attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","create_from_string","string","createRange","createContextualFragment","trim","find_scroll_container","direction","fallback","overflow_y","includes","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","delete_data","template","template_string","template_variables","Function","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","max","escape_css_id","id","CSS","escape","split","element_uuid","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","join","find_form","_el$querySelector","form","querySelector","remove_event_listener","event_listener_map","Map","_step","_iterator","_createForOfIteratorHelper","removeEventListener","el_events","get","entries","filter","entry","utils","regexp_from_wildcard","_step2","_iterator2","size","event_type","cb","opts","addEventListener","has","set","_cb","_event_listener_map$g","capture","await_event","await_pattern_init","pattern","one","generic_event","blur_event","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","submitter","event","dragstart_event","dragend_event","root","writer","bind","oThis","aArgs","fToBind","fNOP","fBound","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_enabled","_level","setWriter","w","output","log_name","level","messages","console","path","route","shift","_getFlag","flag","context","setEnabled","state","isEnabled","setLevel","toUpperCase","getLevel","fatal","match","logconfig","exec","location","search","getWriter","ArgumentParser","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","str","replace","__","p1","alias","original","spec","m","group","field","first_spec","first_name","dest","addArgument","choices","multiple","_camelCase","addGroupToSpec","isArray","choice","_typeof2","JSON","toLowerCase","num","toString","parts","part","_coerce","text","tokens","quoted","simple","argstring","_step3","_iterator3","map","RegExp","_loop","it","_set","subopt","_parseShorthandNotation","parameter","_split","sense","positional","_parseExtendedNotation","sep","extended","$el","result","group_options","_i","_Object$keys","_i2","_Object$keys2","_this2","inherit","$","_step4","stack","_defaults","final_length","_iterator4","hasClass","addBack","provider","frame","data","attr","_parse","results","removeDuplicateObjects","mergeStack","current_value","_cleanupOptions","add_argument","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","ready","sort","scan","clear","transformPattern","content","_pattern$prototype","transform","initPattern","plog","orderPatterns","splice","Text","selectors","_el$parentNode","_el$parentNode$closes","_el$parentNode2","_el$parentNode2$close","_el$parentNode3","_el$parentNode3$close","_el$parentNode4","_el$parentNode4$close","classList","add","register","jquery_plugin","plugin_name","jqueryPlugin","safeClone","clone","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","each","pat","pluralBoundJQueryPlugin","$this","isObject","wildcard","regexp","isElementInViewport","partial","rec","right","every","documentElement","clientHeight","innerWidth","clientWidth","escapeRegExp","extend","source","prop","findLabel","$label","label","nodeType","tagName","removeWildcardClass","targets","classes","ensureArray","remove","matcher","class_list","ok","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","action","easing","addURLQueryParameter","fullURL","param","url","hash","newURL","objs","comparator","reduce","list","next_obj","is_duplicate","_step5","_iterator5","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","amount","parseLength","reference_length","findRelatives","$relatives","$form","find","get_bounds","bounds","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","debounce","func","timer","postpone","last_run","Date","now","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","localized_isodate","date","day","getDate","padStart","month","getMonth","year","getFullYear","escape_html","html","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","is_option_truthy","option","elementInViewport"],"sourceRoot":""}